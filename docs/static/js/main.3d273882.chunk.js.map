{"version":3,"sources":["store/slices/users.js","utils/errors.js","views/Main/Main.js","views/Graph/Graph.js","components/Header/Header.js","reportWebVitals.js","store/index.js","index.js"],"names":["usersSlice","createSlice","name","initialState","value","reducers","add","state","action","push","payload","set","update","user","find","id","work","time","actions","hasError","method","message","result","alert","Main","users","useSelector","dispatch","useDispatch","useState","is_current_user","setIsCurrentUser","current_id","setCurrentID","setName","setWork","setTime","onChange","e","target","className","disabled","map","type","onClick","required","preventDefault","console","log","has_name_error","a","length","has_work_error","has_time_error","Number","Math","random","toString","substr","addItem","Graph","BarChart","width","height","data","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Bar","fill","Header","window","location","pathname","is_home_active","is_show_active","navigate","useNavigate","goTo","path","replace","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","usersReducer","ReactDOM","render","StrictMode","exact","element","document","getElementById"],"mappings":"uSAEaA,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRC,IAAK,SAACC,EAAOC,GACXD,EAAMH,MAAMK,KAAKD,EAAOE,UAE1BC,IAAK,SAACJ,EAAOC,GACXD,EAAMH,MAAN,YAAkBI,EAAOE,UAE3BE,OAAQ,SAACL,EAAOC,GACZ,IAAMK,EAAON,EAAMH,MAAMU,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOP,EAAOE,QAAQK,MAC9DF,IACCA,EAAKG,OAASR,EAAOE,QAAQM,KAC7BH,EAAKI,OAAST,EAAOE,QAAQO,UAMlC,EAA6BjB,EAAWkB,QAAhCZ,EAAR,EAAQA,IAAUM,GAAlB,EAAaD,IAAb,EAAkBC,QACVZ,IAAf,QCzBamB,EAAW,SAACf,EAAOgB,EAAQC,GACpC,IAAMC,EAASF,EAAOhB,GAGtB,OADAkB,GAAUC,MAAMF,GACTC,G,OC2IIE,MAvIf,WACE,IAAMC,EAAQC,aAAY,SAACnB,GAAD,OAAWA,EAAMkB,MAAMrB,SAC3CuB,EAAWC,cAEjB,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAO3B,EAAP,KAAagC,EAAb,KACA,EAAwBL,mBAAS,GAAjC,mBAAOb,EAAP,KAAamB,EAAb,KACA,EAAwBN,mBAAS,GAAjC,mBAAOZ,EAAP,KAAamB,EAAb,KAmDA,OACE,+BACE,iCACE,yBACEhC,MAAO4B,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAaK,EAAEC,OAAOnC,QACvCoC,UAAU,gBACVC,UAAWX,EAJb,UAME,wBAAQ1B,MAAM,GAAGqC,UAAQ,EAAzB,sNAGChB,EAAMiB,KAAI,SAAC7B,GAAD,OACT,wBAAQT,MAAOS,EAAKE,GAApB,SAAyBF,EAAKX,aAIlC,0BAASsC,UAAU,WAAnB,UACE,sBAAMA,UAAU,OAAhB,qHACA,wBAAOA,UAAU,SAAjB,UACE,uBACEG,KAAK,WACLvC,MAAO0B,EACPc,QAAS,kBAAMb,GAAkBD,MAEnC,sBAAMU,UAAU,oBAElB,sBAAMA,UAAU,QAAhB,kKAGF,0BAASA,UAAU,cAAnB,UACE,sBAAKA,UAAU,aAAf,UACE,mGACA,uBACEG,KAAK,OACLE,UAAQ,EACRL,UAAU,aACVtC,KAAK,qBACLE,MAAOF,EACPmC,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOnC,QAClCqC,SAAUX,OAGd,sBAAKU,UAAU,aAAf,UACE,+IACA,uBACEG,KAAK,SACLE,UAAQ,EACRL,UAAU,aACVtC,KAAK,uCACLE,MAAOY,EACPqB,SAAU,SAACC,GAAD,OAAOH,EAAQG,EAAEC,OAAOnC,aAGtC,sBAAKoC,UAAU,aAAf,UACE,4NACA,uBACEG,KAAK,SACLE,UAAQ,EACRL,UAAU,aACVtC,KAAK,iCACLE,MAAOa,EACPoB,SAAU,SAACC,GAAD,OAAOF,EAAQE,EAAEC,OAAOnC,gBAKxC,wBAAQwC,QAAS,SAACN,GAAD,OApHP,SAACA,GACfA,EAAEQ,iBACFC,QAAQC,IAAIvB,GAEZ,IAAMwB,GAAiBnB,GAA0BX,EAC/CjB,GACA,SAACgD,GAAD,OAAoB,IAAbA,EAAEC,SACT,0IAEIC,EAAiBjC,EACrBH,GACA,SAACkC,GAAD,OAAa,IAANA,IACP,sLAEIG,EAAiBlC,EACrBF,GACA,SAACiC,GAAD,OAAa,IAANA,IACP,sJAGED,GAAkBG,GAAkBC,IAKtC1B,EADEG,EAEAlB,EAAO,CACLG,GAAIiB,EACJhB,KAAMsC,OAAOtC,GACbC,KAAMqC,OAAOrC,KAKfX,EAAI,CACFS,GAAI,IAAMwC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAC/CxD,OACAc,KAAMsC,OAAOtC,GACbC,KAAMqC,OAAOrC,MAKnBgB,EAAa,IACbC,EAAQ,IACRC,EAAQ,GACRC,EAAQ,IAsEoBuB,CAAQrB,IAAIE,UAAU,cAA9C,oE,qDC1EOoB,MAvDf,WACE,IAAMnC,EAAQC,aAAY,SAACnB,GAAD,OAAWA,EAAMkB,MAAMrB,SAEjD,OAAqB,IAAjBqB,EAAM0B,OAEN,+BACE,2FAKJ,iCACE,gCACE,4LACA,eAACU,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAMvC,EACNwC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKH,QAAQ,OAAOI,KAAK,kBAI7B,gCACE,wMACA,eAACd,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAMvC,EACNwC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKH,QAAQ,OAAOI,KAAK,sB,iBC7BpBC,MApBf,WACE,MAAyB/C,mBAAsC,MAA7BgD,OAAOC,SAASC,UAA3CC,EAAP,oBACA,EAAyBnD,mBAAsC,UAA7BgD,OAAOC,SAASC,UAA3CE,EAAP,oBAEMC,EAAWC,cAEXC,EAAO,SAAC9C,EAAG+C,GACf/C,EAAEQ,iBAEFoC,EAASG,EAAM,CAACC,SAAS,KAG3B,OACE,mCACI,mBAAGC,KAAK,IAAI3C,QAAS,SAAAN,GAAC,OAAI8C,EAAK9C,EAAG,MAAME,UAAWwC,EAAiB,SAAW,GAA/E,wDACA,mBAAGO,KAAK,QAAQ3C,QAAS,SAAAN,GAAC,OAAI8C,EAAK9C,EAAG,UAAUE,UAAWyC,EAAiB,SAAW,GAAvF,sDCROO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCHDQ,EAAQC,YAAe,CAClCC,QAAS,CACL1E,MAAO2E,KCKbC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOlB,KAAK,IAAImB,OAAK,EAACC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOpB,KAAK,QAAQmB,OAAK,EAACC,QAAS,cAAC,EAAD,gBAK3CC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.3d273882.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    add: (state, action) => {\r\n      state.value.push(action.payload);\r\n    },\r\n    set: (state, action) => {\r\n      state.value = [...action.payload];\r\n    },\r\n    update: (state, action) => {\r\n        const user = state.value.find(user => user.id === action.payload.id);\r\n        if(user) {\r\n            user.work += +action.payload.work;\r\n            user.time += +action.payload.time;\r\n        }\r\n    }\r\n  },\r\n});\r\n\r\nexport const { add, set, update } = usersSlice.actions;\r\nexport default usersSlice.reducer;\r\n","export const hasError = (value, method, message) => {\r\n    const result = method(value);\r\n\r\n    result && alert(message);\r\n    return result;\r\n}","import React, { useState } from \"react\";\r\nimport \"./Main.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { add, update } from \"../../store/slices/users\";\r\n\r\nimport { hasError } from \"../../utils/errors\";\r\n\r\nfunction Main() {\r\n  const users = useSelector((state) => state.users.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const [is_current_user, setIsCurrentUser] = useState(false);\r\n\r\n  const [current_id, setCurrentID] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [work, setWork] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n\r\n  const addItem = (e) => {\r\n    e.preventDefault();\r\n    console.log(users);\r\n\r\n    const has_name_error = is_current_user ? false : hasError(\r\n      name,\r\n      (a) => a.length === 0,\r\n      \"Необходимо заполнить имя\"\r\n    );\r\n    const has_work_error = hasError(\r\n      work,\r\n      (a) => a === 0,\r\n      \"Необходимо заполнить кол-во задач\"\r\n    );\r\n    const has_time_error = hasError(\r\n      time,\r\n      (a) => a === 0,\r\n      \"Необходимо заполнить время\"\r\n    );\r\n\r\n    if (has_name_error || has_work_error || has_time_error) {\r\n      return;\r\n    }\r\n\r\n    if (is_current_user) {\r\n      dispatch(\r\n        update({\r\n          id: current_id,\r\n          work: Number(work),\r\n          time: Number(time),\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        add({\r\n          id: \"_\" + Math.random().toString(36).substr(2, 9),\r\n          name,\r\n          work: Number(work),\r\n          time: Number(time),\r\n        })\r\n      );\r\n    }\r\n\r\n    setCurrentID(\"\");\r\n    setName(\"\");\r\n    setWork(0);\r\n    setTime(0);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <form>\r\n        <select\r\n          value={current_id}\r\n          onChange={(e) => setCurrentID(e.target.value)}\r\n          className=\"form-selector\"\r\n          disabled={!is_current_user}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Выберите существующего пользователя\r\n          </option>\r\n          {users.map((user) => (\r\n            <option value={user.id}>{user.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <section className=\"switcher\">\r\n          <span className=\"left\">Новый пользователь</span>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              value={is_current_user}\r\n              onClick={() => setIsCurrentUser(!is_current_user)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n          <span className=\"right\">Существующий пользователь</span>\r\n        </section>\r\n\r\n        <section className=\"form-inputs\">\r\n          <div className=\"form-group\">\r\n            <span>Введите имя: </span>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-input\"\r\n              name=\"Имя\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              disabled={is_current_user}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <span>Введите кол-во задач: </span>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              className=\"form-input\"\r\n              name=\"Задачи\"\r\n              value={work}\r\n              onChange={(e) => setWork(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <span>Введите затраченное время ( в часах ): </span>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              className=\"form-input\"\r\n              name=\"Время\"\r\n              value={time}\r\n              onChange={(e) => setTime(e.target.value)}\r\n            />\r\n          </div>\r\n        </section>\r\n\r\n        <button onClick={(e) => addItem(e)} className=\"form-submit\">\r\n          Добавить\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./Graph.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\r\n\r\nfunction Graph() {\r\n  const users = useSelector((state) => state.users.value);\r\n\r\n  if (users.length === 0)\r\n    return (\r\n      <main>\r\n        <h2>Нет данных</h2>\r\n      </main>\r\n    );\r\n\r\n  return (\r\n    <main>\r\n      <div>\r\n        <h2>Кол-во выполненных задач ( в шт. )</h2>\r\n        <BarChart\r\n          width={600}\r\n          height={400}\r\n          data={users}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"work\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Кол-во затраченного времени ( в ч. )</h2>\r\n        <BarChart\r\n          width={600}\r\n          height={400}\r\n          data={users}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"time\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const [is_home_active] = useState(window.location.pathname === '/');\r\n  const [is_show_active] = useState(window.location.pathname === '/show');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const goTo = (e, path) => {\r\n    e.preventDefault();\r\n\r\n    navigate(path, {replace: true});\r\n  }\r\n\r\n  return (\r\n    <header>\r\n        <a href=\"/\" onClick={e => goTo(e, '/')} className={is_home_active ? \"active\" : \"\"}>Главная</a>\r\n        <a href=\"/show\" onClick={e => goTo(e, '/show')} className={is_show_active ? \"active\" : \"\"}>График</a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport usersReducer from './slices/users'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n      users: usersReducer\r\n  }\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./views/Main/Main\";\nimport Graph from \"./views/Graph/Graph\";\nimport Header from \"./components/Header/Header\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { store } from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <Header />\n        <Routes>\n          <Route path=\"/\" exact element={<Main />} />\n          <Route path=\"/show\" exact element={<Graph />} />\n        </Routes>\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}